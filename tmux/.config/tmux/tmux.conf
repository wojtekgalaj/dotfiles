set-option -g status on
set-option -g status-interval 2
set-option -g status-justify "centre"

# Just a bit nicer status style
set -g status-style "bg=#262626"
set -g status-style "fg=#b2b2b2"

set -g history-limit 10000

set-option -w -g aggressive-resize on

# use vim keys in vopy mode. i am not sure if i want this
setw -g mode-keys vi

set-option -g status-position top

# Set CTRL+Space as prefix and unbind the old one
set -g prefix 'C-Space'
unbind C-b

# Use prefix r to refresh config
bind r source-file ~/.config/tmux/tmux.conf \; display 'Config refreshed'

# # Split panes maintaining the same working directory
bind -r \" split-window -h -c "#{pane_current_path}"
bind -r % split-window -v -c "#{pane_current_path}"

is_vim="children=(); i=0; pids=( $(ps -o pid= -t '#{pane_tty}') ); \
while read -r c p; do [[ -n c && c -ne p && p -ne 0 ]] && children[p]+=\" $\{c\}\"; done <<< \"$(ps -Ao pid=,ppid=)\"; \
while (( $\{#pids[@]\} > i )); do pid=$\{pids[i++]\}; pids+=( $\{children[pid]-\} ); done; \
ps -o state=,comm= -p \"$\{pids[@]\}\" | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }
bind-key -n 'C-n' if-shell "$is_vim" 'send-keys C-n' { if -F '#{window_end_flag}' '' 'select-window -n' }
bind-key -n 'C-p' if-shell "$is_vim" 'send-keys C-p' { if 'test #{window_index} -gt #{base-index}' 'select-window -p' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'
bind-key -T copy-mode-vi 'C-n' if -F '#{window_end_flag}' '' 'select-window -n'
bind-key -T copy-mode-vi 'C-p' if 'test #{window_index} -gt #{base-index}' 'select-window -p'

bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 10'
bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 10'
bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 10'
bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 10'

bind-key -T copy-mode-vi M-h resize-pane -L 10
bind-key -T copy-mode-vi M-j resize-pane -D 10
bind-key -T copy-mode-vi M-k resize-pane -U 10
bind-key -T copy-mode-vi M-l resize-pane -R 10
